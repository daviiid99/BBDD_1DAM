SET sql_mode = '';
USE COCHES;
SELECT * FROM FABRICANTE;
SELECT * FROM MODELO;
SELECT * FROM SERIE;
# ================================================================================ #
# =========================== EJERCICIO 1 (2.66 PUNTOS) =========================== #
# ================================================================================ #
# CREA UNA CONSULTA QUE MUESTRE EL NOMBRE DE CADA MODLEO DE COCHE 
# Y SU PRECIO MEDIO REDONDEADO A DOS DECIMALES.
# SI NO DISPONEMOS DE PRECIO MEDIO, EL PRECIO DEBE SER 10.000€.
# MUESTRA EL RESULTADO ORDENADO ALFABÉTICAMENTE

SELECT M.NOMBRE AS MODELO, IFNULL(ROUND(AVG(PRECIO_EUR),2), 10000) AS PRECIO_MEDIO FROM MODELO M
LEFT JOIN SERIE S ON S.ID_MODELO = M.ID
GROUP BY M.ID
ORDER BY M.NOMBRE ASC;


# ================================================================================ #
# =========================== EJERCICIO 2 (2.67 PUNTOS) =========================== #
# ================================================================================ #

# CREA UNA VISTA QUE MUESTRE EL NOMBRE DEL FABRICANTE, EL MODELO Y EL PRECIO MÍNIMO DE DICHO MODELO.
# SI NO DISPONEMOS DE PRECIO MÍNIMO, EL PRECIO DEBE SER 10.000€.
# MUESTRA EL RESULTADO ORDENADO DE MAYOR A MENOR PRECIO MÍNIMO

	SELECT * FROM FABRICANTE;
    SELECT * FROM MODELO;
    SELECT * FROM SERIE;
    
    CREATE OR REPLACE VIEW NOMBRE_MODELO_PRECIO AS
    SELECT F.NOMBRE AS FABRICANTE, M.NOMBRE AS MODELO, IFNULL(ROUND(MIN(S.PRECIO_EUR), 2), 10000) AS PRECIO_MINIMO_MODELO FROM FABRICANTE F
    LEFT JOIN MODELO M ON F.ID = M.ID_FABRICANTE
    LEFT JOIN SERIE S ON S.ID_MODELO = M.ID
    GROUP BY M.ID
    ORDER BY PRECIO_MINIMO_MODELO DESC;
    
    SELECT * FROM NOMBRE_MODELO_PRECIO;

# ================================================================================ #
# =========================== EJERCICIO 3 (2.67 PUNTOS) =========================== #
# ================================================================================ #

# CREA UN PROCEDURE QUE RECIBA UN PRECIO MÍNIMO Y UN PRECIO MÁXIMO Y MUESTRE:

# EL NOMBRE DEL FABRICANTE, EL NOMBRE DEL MODELO Y EL PRECIO MEDIO REDONDEADO A DOS DECIMALES DE DICHO MODELO.
# SOLO DEBE MOSTRAR LOS MODELOS COMPRENDIDOS ENTRE EL PRECIO MÍNIMO Y EL MÁXIMO (INCLUIDOS) PASADOS COMO PARÁMETRO DEL PROCEDURE
# SI NO DISPONEMOS DE PRECIO MEDIO, EL PRECIO DEBE SER 10.000€.
# MUESTRA EL RESULTADO ORDENADO ALFABÉTICAMENTE POR FABRICANTE Y MODELO

DROP PROCEDURE IF EXISTS CONSULTA_MODELOS_PRECIO;
DELIMITER //
CREATE PROCEDURE CONSULTA_MODELOS_PRECIO(MINIMO FLOAT, MAXIMO FLOAT)
BEGIN
SELECT F.NOMBRE AS FABRICANTE, M.NOMBRE AS MODELO, IFNULL(ROUND(AVG(S.PRECIO_EUR),2), 10000) AS PRECIO_MEDIO_MODELO
FROM FABRICANTE F
LEFT JOIN MODELO M ON F.ID = M.ID_FABRICANTE
LEFT JOIN SERIE S ON S.ID_MODELO = M.ID
GROUP BY M.ID
HAVING PRECIO_MEDIO_MODELO BETWEEN MINIMO AND MAXIMO
ORDER BY FABRICANTE, MODELO;
END //
DELIMITER ;

CALL CONSULTA_MODELOS_PRECIO(20000, 40000);

# ================================================================================ #
# =========================== EJERCICIO 4 (2 PUNTOS) =========================== #
# ================================================================================ #

# CREA UNA CONSULTA QUE MUESTRE EL NOMBRE DE CADA FABRICANTE, 
# EL NÚMERO DE MODELOS DE DICHO FABRICANTE Y LA MEDIA DE SERIES DISTINTAS DE CADA MODELO

-- NOMBRE FABRICANTE, CANTIDAD DE MODELOS DE COCHE, ESOS MODELOS CUANTAS SERIES DE MEDIA TIENE DE LOS MODELOS DE
-- ESE FABRICANTE. EJEMPLO TOYOTA DE MEDIA SUS MODELOS TIENEN 6 SERIES, CUANTAS SERIES DE MEDIA TIENEN SUS MODELOS DE FABRICANTE

SELECT * FROM FABRICANTE;
SELECT * FROM MODELO;
SELECT * FROM SERIE;

SELECT 
DISTINCT F.NOMBRE AS FABRICANTE, 
COUNT(M.ID) AS CANTIDAD_MODELOS_FABRICANTE, 
COUNT(S.ID)/COUNT(S.ID_MODELO) AS SERIES_DE_MEDIA_MODELO_DE_FABRICANTE
FROM FABRICANTE F
LEFT JOIN MODELO M ON F.ID = M.ID_FABRICANTE
LEFT JOIN SERIE S ON S.ID_MODELO = M.ID
GROUP BY F.NOMBRE;
