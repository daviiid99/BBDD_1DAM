DROP SCHEMA IF EXISTS BANCO;
CREATE SCHEMA BANCO;
USE BANCO;

DROP TABLE IF EXISTS TITULAR;
CREATE TABLE TITULAR (
	ID_TITULAR INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(255),
    DNI CHAR(9),
    DIRECCION VARCHAR(255),
    UNIQUE (DNI)

);

INSERT INTO TITULAR (NOMBRE,DNI,DIRECCION)
VALUES
  ("YCH22KMF2IL","62797825O","Ap #439-2764 Vestibulum St."),
  ("PIQ85KYA4PD","33384685R","989-6399 Nulla. Av."),
  ("MQR35YRG5DS","58238665B","P.O. Box 954, 7914 Rhoncus. Av."),
  ("OCD10EJO8XU","82143229G","Ap #747-5150 Quisque Av."),
  ("GKJ54IVB2EV","53255347K","Ap #385-3508 Placerat, Rd."),
  ("KQZ64PKO3VX","33738233J","9308 Auctor. St."),
  ("JBI97QTQ1TI","94681743W","779-2714 Augue St."),
  ("GJB35RLM1OI","23626964U","Ap #582-834 Scelerisque, St."),
  ("ENQ29UXP1FY","66348724Q","794-8344 Molestie Rd."),
  ("KJD52XGI4OO","24256166O","Ap #372-5354 Risus. Street"),
  ("GSS26UWO0VL","63718539J","830-7757 Enim Road"),
  ("TDQ52AFS1YC","51535556I","2225 At, St."),
  ("FRT49PUH8XL","36265884G","Ap #660-6941 Porttitor St."),
  ("MWT14UBM7LL","52137584Y","764-1320 Ac Ave"),
  ("JEO66LNH1YI","99862824X","5305 Mollis Street"),
  ("CTC81RWC8IW","36536243N","Ap #869-2167 Mollis Av."),
  ("VFW25GNQ9KR","35653743H","883-6328 Odio Av."),
  ("OVH88THV1PX","72133947W","Ap #343-5367 Lacus. Ave"),
  ("YNW63BCN0GW","27312442O","P.O. Box 211, 4855 Gravida Ave"),
  ("RWV86PBU1MM","74763273W","7005 Velit. Road");
  
  SELECT * FROM TITULAR;

DROP TABLE IF EXISTS CUENTA ;
CREATE TABLE CUENTA (
	ID_CUENTA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    IBAN CHAR(24),
    SALDO_EN_EUROS DOUBLE (5, 2),
    UNIQUE (IBAN)
);

INSERT INTO CUENTA (IBAN,SALDO_EN_EUROS)
VALUES
  ("DD1877836362666941723330","421.59"),
  ("BZ9058812576463449121185","282.61"),
  ("QQ7639553959007069815266","739.96"),
  ("TQ0482037620925609363643","673.17"),
  ("VY3278612299341863577838","663.45"),
  ("BM1032366278391476803168","167.47"),
  ("QM4321823748683639510228","814.58"),
  ("LO6880701747104454124404","549.82"),
  ("NL9193241602164127807610","564.33"),
  ("CP3422490268036538536287","376.23"),
  ("IF2422914177525983356671","324.26"),
  ("TT1267815778622888513146","275.12"),
  ("TP4571117511836275713756","436.52"),
  ("CE3080024275616481728845","652.49"),
  ("BL5231765957862370018568","524.53"),
  ("HC9712127920238574689786","632.88"),
  ("ZK9011584676767731144398","782.51"),
  ("SI2665070488665871721562","772.83"),
  ("JN6620357837986077086791","674.74"),
  ("UE2907212718847548442130","738.15");

SELECT * FROM CUENTA;

DROP TABLE IF EXISTS TARJETA;
CREATE TABLE TARJETA (
	ID_TARJETA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    ID_CUENTA INT UNSIGNED,
    ID_TITULAR INT UNSIGNED,
    FOREIGN KEY (ID_TITULAR) REFERENCES TITULAR(ID_TITULAR),
    FOREIGN KEY (ID_CUENTA) REFERENCES CUENTA(ID_CUENTA),
    NUMERO_TARJETA CHAR(16),
    VALIDEZ DATE,
    CODIGO_VERIFICACION CHAR (3),
    UNIQUE (NUMERO_TARJETA)
);

INSERT INTO TARJETA (ID_TITULAR,ID_CUENTA,NUMERO_TARJETA,VALIDEZ,CODIGO_VERIFICACION)
VALUES
  (19,13,"8475263625167456","2022/1/01","538"),
  (4,12,"2547969354435344","2022/9/01","874"),
  (13,8,"1116837777188652","2022/10/01","278"),
  (10,13,"2229329384463684","2021/7/01","544"),
  (19,6,"2543995786388837","2023/2/01","958"),
  (18,18,"7122546643682745","2022/12/01","768"),
  (3,11,"7211158736253318","2022/5/01","416"),
  (18,16,"5586259838677267","2022/7/01","378"),
  (3,20,"3785868474841221","2022/8/01","426"),
  (4,20,"5656632589787324","2022/12/01","778"),
  (9,12,"8252848843514758","2022/5/01","957"),
  (19,5,"3873381388564745","2021/12/01","543"),
  (18,13,"3611153335236765","2022/10/01","786"),
  (15,8,"7757915811267572","2022/1/01","217"),
  (17,15,"5153835185325736","2022/6/01","482"),
  (10,17,"6153486418862322","2022/8/01","471"),
  (14,19,"4799544822464566","2022/2/01","257"),
  (4,10,"8759578887616645","2022/9/01","336"),
  (14,2,"6742823967869938","2021/5/01","858"),
  (18,20,"8568256625712884","2021/11/01","474");

SELECT * FROM TARJETA;

DROP TABLE IF EXISTS TITULAR_POSEE_CUENTA;
CREATE TABLE TITULAR_POSEE_CUENTA(
	ID_TITULAR_CUENTA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	ID_TITULAR INT UNSIGNED,
    ID_CUENTA INT UNSIGNED,
    FOREIGN KEY (ID_TITULAR) REFERENCES TITULAR(ID_TITULAR),
    FOREIGN KEY (ID_CUENTA) REFERENCES CUENTA(ID_CUENTA),
    UNIQUE (ID_TITULAR, ID_CUENTA)
);

INSERT INTO TITULAR_POSEE_CUENTA(ID_TITULAR, ID_CUENTA) -- IGNORE ignora duplicados
VALUES
  (19,17),
  (18,9),
  (5,19),
  (2,8),
  (10,14),
  (18,12),
  (17,16),
  (17,15),
  (13,10),
  (17,6),
  (15,11),
  (12,3),
  (9,6),
  (10,1),
  (12,13),
  (16,20),
  (5,11),
  (4,14),
  (18,11),
  (11,2);

SELECT * FROM TITULAR_POSEE_CUENTA;

#Crea una vista que muestre un listado de todos los clientes (nombre), 
# el número de cuentas que tienen y el número de tarjetas que tienen.

CREATE OR REPLACE VIEW LISTADO_CLIENTES
AS
SELECT TI.NOMBRE AS CLIENTE, COUNT(DISTINCT(CT.ID_CUENTA)) AS NUMERO_CUENTAS, COUNT(DISTINCT(TA.ID_TARJETA)) AS NUMERO_TARJETAS FROM TITULAR TI
JOIN TITULAR_POSEE_CUENTA CT ON TI.ID_TITULAR = CT.ID_TITULAR
JOIN TARJETA TA ON TA.ID_TITULAR = TI.ID_TITULAR
WHERE TI.ID_TITULAR = CT.ID_TITULAR
GROUP BY TI.ID_TITULAR;

SELECT * FROM LISTADO_CLIENTES;

#Crea un procedure que, pasandole un dni como parámetro, muestre un listado de las cuentas de ese usuario
# y las tarjetas asociadas a cada cuenta.
#En el listado debe aparecer, el nombre, el iban y el número de tarjeta.

DROP PROCEDURE IF EXISTS CUENTAS;
DELIMITER //
CREATE PROCEDURE CUENTAS(IN dni_param CHAR(9))
BEGIN
SELECT TI.NOMBRE AS CLIENTE, CU.IBAN AS CUENTAS, TA.NUMERO_TARJETA AS NUMERO_TARJETAS FROM TITULAR TI
JOIN TITULAR_POSEE_CUENTA CT ON TI.ID_TITULAR = CT.ID_TITULAR
JOIN TARJETA TA ON TA.ID_TITULAR = TI.ID_TITULAR
JOIN CUENTA CU ON CU.ID_CUENTA = CT.ID_CUENTA
WHERE TI.DNI = dni_param;
END //
DELIMITER ;

CALL CUENTAS("82143229G");


	SELECT * FROM CUENTA WHERE ID NOT IN (SELECT DISTINCT ID_CUENTA FROM PERSONA_TITULAR_CUENTA);
#¿Cómo podríamos almacenar el movimiento de las cuentas?
-- Podriamos crear una nueva tabla que almacene los movimientos de la cuenta llamada 'Movimientos' cuyo saldo sería el que se propaga

#¿Como podríamos tener solo un titular prncipal de cada cuenta y varios titulares secundarios?
-- Podriamos tener una nueva clave que sea el id principal y los otros clave candidata